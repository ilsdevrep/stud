program lab7; 
  
 uses windows, messages, sysutils; {интерфейсы к системным DLL} 
  
 {$R lab7.res} // Подключается файл ресурсов 
  
 var dyn:function(a,b:PChar): Integer; pascal; //Переменная для динамической загрузки 
 hLib7:hModule; 
 hwnd1,hwnd2,DC:THandle; 
 var R,G,B:byte; 
  
 function dlgProc(hdlg: THandle; Msg: integer; wParam: longint; lParam: longint): LRESULT; stdcall; 
   const 
 	btnExecute=104; 
     sbR=101;sbG=102;sbB=103; 
     esR=105;esG=106;esB=107; 
   var i,j:integer; 
       buffer: array[0..255] of char; 
             buf: array[0..255] of char; 
             bufe: array[0..255] of char; 
             Tmp:integer; 
 begin 
   result:=1; 
   case Msg of 
     wm_create:begin 
     end; 
     wm_command: 
       case hiword(wParam) of 
         BN_Clicked: begin 
               R:=0;G:=0;B:=0; 
               SetScrollRange(GetDlgItem(hdlg,sbR),sb_ctl,0,255,true); 
               SetScrollRange(GetDlgItem(hdlg,sbG),sb_ctl,0,255,true); 
               SetScrollRange(GetDlgItem(hdlg,sbB),sb_ctl,0,255,true); 
  
               LoadString(hLib7,4,@bufe,256); 
               LoadString(hLib7,1,@buf,256); 
 	if (SendMessage(GetDlgItem(hdlg,esR),wm_gettext,sizeof(buffer),integer(@buffer))<>0) then begin 
               Tmp:=strtoint(buffer); 
               if Tmp<=255 then begin 
                R:=Tmp; 
                SetScrollPos(GetDlgItem(hdlg,sbR),sb_ctl,R,true); 
                end else MessageBox(hwnd1,@buf,@bufe,MB_OK); 
         end else MessageBox(hwnd1,@buf,@bufe,MB_OK); 
 LoadString(hLib7,2,@buf,256); 
               if (SendMessage(GetDlgItem(hdlg,esG),wm_gettext,sizeof(buffer),integer(@buffer))<>0) then begin 
               Tmp:=strtoint(buffer); 
               if Tmp<=255 then begin 
                G:=Tmp; 
                SetScrollPos(GetDlgItem(hdlg,sbG),sb_ctl,G,true); 
                end else MessageBox(hwnd1,@buf,@bufe,MB_OK); 
         end else MessageBox(hwnd1,@buf,@bufe,MB_OK); 
 LoadString(hLib7,3,@buf,256); 
             if (SendMessage(GetDlgItem(hdlg,esB),wm_gettext,sizeof(buffer),integer(@buffer))<>0) then begin 
               Tmp:=strtoint(buffer); 
               if Tmp<=255 then begin 
               B:=Tmp; 
               SetScrollPos(GetDlgItem(hdlg,sbB),sb_ctl,B,true); 
               end else MessageBox(hwnd1,@buf,@bufe,MB_OK); 
         end else MessageBox(hdlg,@buf,@bufe,MB_OK); 
  
 	InvalidateRect(hwnd1, prect(0), false); 
         UpdateWindow(hwnd1); 
 end; 
       end; //case hiword(wparam) in for WM_COMMAND message 
  
     wm_close: 
       begin 
         EndDialog(hdlg,idCancel); 
       end; 
     else 
       result:=0; 
   end; 
 end; 
  
  
 function wndProc(hWnd: THandle; Msg: integer; wParam: longint; lParam: longint): longint; stdcall; 
 var 
       hdc:Thandle; 
       ps:tpaintstruct; 
       oldBrush:thandle; 
 begin 
   result:=0; 
   case Msg of 
     wm_create: 
       begin 
         hLib7:=loadLibrary('lib7.dll'); 
         @dyn:=GetProcAddress(hLib7,pointer(2)); 
       end; 
     wm_command: // Обработка команд от всех органов управления 
       if hiword(wparam)=0 then begin //В сообщениях меню нулевой код уведомления 
         case loword(wparam) of 
           40001: DialogBox(hLib7,'DIA',hwnd,@dlgproc); 
           40002: sendmessage(hwnd,wm_close,0,0); 
           40003: dyn('1','2'); 
  
         end; 
       end; 
     wm_paint: 
     begin 
 	hDC:=BeginPaint(hWnd,Ps); 
 	oldBrush := SelectObject(HDC, CreateSolidBrush(rgb(R,G,B))); 
 	floodfill(hdc,0,0,rgb(R,G,B)); 
 	DeleteObject(SelectObject(hdc,oldBrush)); 
 	EndPaint(hWnd,Ps); 
     end; 
     wm_close: 
       begin // Органы управления уничтожаются автоматически 
         FreeLibrary(hLib7); 
         PostQuitMessage(0); 
       end; 
     else 
       result:=DefWindowProc(hwnd,msg,wparam,lparam); 
   end; 
 end; 
  
 procedure WinMain; {Основной цикл обработки сообщений} 
   const szClassName='Controls demo'; 
   var   wndClass:TWndClassEx; 
         msg:TMsg; 
 begin 
   wndClass.cbSize:=sizeof(wndClass); 
   wndClass.style:=0; 
   wndClass.lpfnWndProc:=@WndProc; 
   wndClass.cbClsExtra:=0; 
   wndClass.cbWndExtra:=0; 
   wndClass.hInstance:=hInstance; 
   wndClass.hIcon:=loadIcon(hInstance, 'ICO'); 
   wndClass.hCursor:=loadCursor(hInstance, 'CUR'); 
   wndClass.hbrBackground:=GetStockObject(white_Brush); 
   wndClass.lpszMenuName:='MNU'; 
   wndClass.lpszClassName:=szClassName; 
   wndClass.hIconSm:=wndClass.hIcon; 
  
   RegisterClassEx(wndClass); 
  
   hwnd1:=CreateWindowEx(0, 
          szClassName, {имя класса окна} 
          'Заголовок',    {заголовок окна} 
          ws_overlappedwindow,       {стиль окна} 
          10,           {Left} 
          10,           {Top} 
          500,                     {Width} 
          300,                     {Height} 
          0,                       {хэндл родительского окна} 
          0,                       {хэндл оконного меню} 
          hInstance,               {хэндл экземпляра приложения} 
          nil);                    {параметры создания окна} 
  
   ShowWindow(hwnd1,sw_shownormal); 
  
   while GetMessage(msg,0,0,0) do begin {получить очередное сообщение} 
       TranslateMessage(msg);   {Windows транслирует сообщения от клавиатуры} 
       DispatchMessage(msg);    {Windows вызовет оконную процедуру} 
   end; {выход по wm_quit, на которое GetMessage вернет FALSE} 
 end; 
  
  
 begin 
   WinMain; 
 end.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$H+} 
 library Lib7; 
  
 uses windows, SysUtils; 
  
 {$R lab7.res} 
  
 function procd1(a,b:pchar):integer ; pascal; 
   var s:string; 
 begin 
   result:=integer(strPos(a,b)); 
   if result>integer(a) then result:=result-integer(a)+1; 
   s:='Первая строка: "'+a+'"'#13#10'Вторая строка: "'+b+'"'#13#10; 
   MessageBox(0,pchar(s), 
               'Procedure 2',mb_ok or MB_ICONINFORMATION); 
 end; 
  
 exports 
   procd1 index 2; 
 end.
